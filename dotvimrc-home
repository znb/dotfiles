" general settings
set tabstop=4
set shiftwidth=4
set softtabstop=4
set expandtab
set smarttab
set smartindent autoindent
set smartcase

" Searches
set incsearch
set nohlsearch
" Ignore case in searches
set ignorecase smartcase

set noerrorbells

set history=10
set paste
"
" Enable line numbers
set number
set nospell
"set spell spelllang=en_gb

" leader
let mapleader=","

" vert/horizontal cursors    
set cuc
set cul
set ruler

" Enhanced command line completion
set wildmenu

" make vim more useful 
set nocompatible
" Optimize for fast terminal connections
set ttyfast
" Don’t add empty newlines at the end of files
set binary
set noeol 

" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps
if exists("&undodir")
	set undodir=~/.vim/undo
endif

" Show “invisible” characters
set lcs=tab:▸\ ,trail:·,eol:¬,nbsp:_
set list

" Dont show intro message
set shortmess=atI

" syntax hilighting
syntax on

" for vundle
filetype off
filetype plugin indent on
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" added plugins
Plugin 'gmarik/Vundle.vim'
Plugin 'vim-powerline'
"Bundle 'rizzatti/dash.vim'
Bundle 'davidhalter/jedi-vim'
Bundle 'klen/python-mode'
"Bundle 'tpope/vim-surround'
Bundle 'scrooloose/syntastic'

call vundle#end()
"filetype plugin indent on

" powerline specific
set laststatus=2
set encoding=utf-8
set noshowmode
set guifont=Menlo\ For\ Powerline
set t_Co=256
set fillchars+=stl:\ ,stlnc:\
let g:Powerline_symbols = 'fancy'

" colour settings
set background=dark
colorscheme solarized

" syntastic settings
"set statusline+=%#warningmsg#
"set statusline+=%{SyntasticStatuslineFlag()}
"set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" highlighting
hi SpellBad cterm=underline gui=underline,bold

" Python
au FileType py set autoindent
au FileType py set smartindent
au FileType py set textwidth=79

" Python-mode
let g:pymode_rope_lookup_project = 0
let g:pymode_rope_completion = 0
let g:pymode_rope_complete_on_dot = 0
let g:pymode_python = 'python'
let g:pymode_rope_completion_bind = '<C-Space>'
let g:pymode_lint_ignore = "E501,W,E101,C901"